Starting audit...
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Hero.java:3: Using the '.*' form of import should be avoided - main.data.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Hero.java:27:14: Variable 'strategy' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Hero.java:28:11: Variable 'angelBonus' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Hero.java:29:11: Variable 'strategyBonus' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Hero.java:36:5: More than 7 parameters (found 8). [ParameterNumber]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Hero.java:65:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'addAngelBonus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'addAngelBonus' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Hero.java:70:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'addStrategyBonus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'addStrategyBonus' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Hero.java:74:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'resetAngelBonus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'resetAngelBonus' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Hero.java:113:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Hero.java:121:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getFullName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getFullName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Hero.java:142:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getToNextLevel' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getToNextLevel' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Hero.java:170: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Hero.java:247: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Hero.java:271:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'checkForLevelUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'checkForLevelUp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Hero.java:320:36: Must have at least one statement. [EmptyBlock]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Hero.java:341: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Hero.java:424:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'computeObservation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'computeObservation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Hero.java:424:36: Parameter enemy should be final. [FinalParameters]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Knight.java:309:5: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'lookForStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'lookForStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Rogue.java:183:15: '0.0001f' is a magic number. [MagicNumber]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Rogue.java:246:44: '0.0001f' is a magic number. [MagicNumber]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Rogue.java:276:15: '0.0001f' is a magic number. [MagicNumber]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Rogue.java:323:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'lookForStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'lookForStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Wizard.java:245:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'lookForStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'lookForStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Pyromancer.java:312:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'lookForStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'lookForStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Pyromancer.java:315: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Pyromancer.java:317: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/strategies/Strategy.java:19:5: Class 'Strategy' looks like designed for extension (can be subclassed), but the method 'applyStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Strategy' final or making the method 'applyStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Angel.java:5: Using the '.*' form of import should be avoided - main.heroes.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Angel.java:38:5: Class 'Angel' looks like designed for extension (can be subclassed), but the method 'getRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Angel' final or making the method 'getRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Angel.java:42:5: Class 'Angel' looks like designed for extension (can be subclassed), but the method 'getCol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Angel' final or making the method 'getCol' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Angel.java:46:5: Class 'Angel' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Angel' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Angel.java:50:5: Class 'Angel' looks like designed for extension (can be subclassed), but the method 'spawn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Angel' final or making the method 'spawn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/SmallAngel.java:5: Using the '.*' form of import should be avoided - main.heroes.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/SmallAngel.java:14:5: Class 'SmallAngel' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SmallAngel' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/SmallAngel.java:24:5: Class 'SmallAngel' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SmallAngel' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/SmallAngel.java:34:5: Class 'SmallAngel' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SmallAngel' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/SmallAngel.java:44:5: Class 'SmallAngel' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SmallAngel' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/SmallAngel.java:54:5: Class 'SmallAngel' looks like designed for extension (can be subclassed), but the method 'computeObservation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SmallAngel' final or making the method 'computeObservation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/SmallAngel.java:55:36: Parameter hero should be final. [FinalParameters]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/GoodBoy.java:5: Using the '.*' form of import should be avoided - main.heroes.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/GoodBoy.java:14:5: Class 'GoodBoy' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GoodBoy' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/GoodBoy.java:24:5: Class 'GoodBoy' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GoodBoy' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/GoodBoy.java:34:5: Class 'GoodBoy' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GoodBoy' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/GoodBoy.java:44:5: Class 'GoodBoy' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GoodBoy' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/GoodBoy.java:54:5: Class 'GoodBoy' looks like designed for extension (can be subclassed), but the method 'computeObservation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GoodBoy' final or making the method 'computeObservation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/GoodBoy.java:55:36: Parameter hero should be final. [FinalParameters]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/LifeGiver.java:5: Using the '.*' form of import should be avoided - main.heroes.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/LifeGiver.java:14:5: Class 'LifeGiver' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LifeGiver' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/LifeGiver.java:23:5: Class 'LifeGiver' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LifeGiver' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/LifeGiver.java:32:5: Class 'LifeGiver' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LifeGiver' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/LifeGiver.java:41:5: Class 'LifeGiver' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LifeGiver' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/LifeGiver.java:50:5: Class 'LifeGiver' looks like designed for extension (can be subclassed), but the method 'computeObservation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LifeGiver' final or making the method 'computeObservation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/LifeGiver.java:51:36: Parameter hero should be final. [FinalParameters]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/XPAngel.java:5: Using the '.*' form of import should be avoided - main.heroes.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/XPAngel.java:14:5: Class 'XPAngel' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'XPAngel' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/XPAngel.java:23:5: Class 'XPAngel' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'XPAngel' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/XPAngel.java:32:5: Class 'XPAngel' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'XPAngel' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/XPAngel.java:41:5: Class 'XPAngel' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'XPAngel' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/XPAngel.java:50:5: Class 'XPAngel' looks like designed for extension (can be subclassed), but the method 'computeObservation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'XPAngel' final or making the method 'computeObservation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/XPAngel.java:51:36: Parameter hero should be final. [FinalParameters]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/DamageAngel.java:5: Using the '.*' form of import should be avoided - main.heroes.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/DamageAngel.java:14:5: Class 'DamageAngel' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DamageAngel' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/DamageAngel.java:23:5: Class 'DamageAngel' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DamageAngel' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/DamageAngel.java:32:5: Class 'DamageAngel' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DamageAngel' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/DamageAngel.java:41:5: Class 'DamageAngel' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DamageAngel' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/DamageAngel.java:50:5: Class 'DamageAngel' looks like designed for extension (can be subclassed), but the method 'computeObservation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DamageAngel' final or making the method 'computeObservation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Dracula.java:5: Using the '.*' form of import should be avoided - main.heroes.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Dracula.java:14:5: Class 'Dracula' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Dracula' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Dracula.java:24:5: Class 'Dracula' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Dracula' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Dracula.java:34:5: Class 'Dracula' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Dracula' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Dracula.java:44:5: Class 'Dracula' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Dracula' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Dracula.java:54:5: Class 'Dracula' looks like designed for extension (can be subclassed), but the method 'computeObservation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Dracula' final or making the method 'computeObservation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Dracula.java:55:36: Parameter hero should be final. [FinalParameters]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/DarkAngel.java:5: Using the '.*' form of import should be avoided - main.heroes.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/DarkAngel.java:14:5: Class 'DarkAngel' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DarkAngel' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/DarkAngel.java:23:5: Class 'DarkAngel' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DarkAngel' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/DarkAngel.java:32:5: Class 'DarkAngel' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DarkAngel' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/DarkAngel.java:41:5: Class 'DarkAngel' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DarkAngel' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/DarkAngel.java:50:5: Class 'DarkAngel' looks like designed for extension (can be subclassed), but the method 'computeObservation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DarkAngel' final or making the method 'computeObservation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/DarkAngel.java:51:36: Parameter hero should be final. [FinalParameters]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/LevelUpAngel.java:5: Using the '.*' form of import should be avoided - main.heroes.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/LevelUpAngel.java:14:5: Class 'LevelUpAngel' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LevelUpAngel' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/LevelUpAngel.java:24:5: Class 'LevelUpAngel' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LevelUpAngel' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/LevelUpAngel.java:34:5: Class 'LevelUpAngel' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LevelUpAngel' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/LevelUpAngel.java:44:5: Class 'LevelUpAngel' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LevelUpAngel' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/LevelUpAngel.java:54:5: Class 'LevelUpAngel' looks like designed for extension (can be subclassed), but the method 'computeObservation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LevelUpAngel' final or making the method 'computeObservation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/LevelUpAngel.java:55:36: Parameter hero should be final. [FinalParameters]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/TheDoomer.java:4: Using the '.*' form of import should be avoided - main.heroes.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/TheDoomer.java:13:5: Class 'TheDoomer' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheDoomer' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/TheDoomer.java:22:5: Class 'TheDoomer' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheDoomer' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/TheDoomer.java:31:5: Class 'TheDoomer' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheDoomer' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/TheDoomer.java:40:5: Class 'TheDoomer' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheDoomer' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/TheDoomer.java:49:5: Class 'TheDoomer' looks like designed for extension (can be subclassed), but the method 'computeObservation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheDoomer' final or making the method 'computeObservation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/TheDoomer.java:50:36: Parameter hero should be final. [FinalParameters]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Spawner.java:5: Using the '.*' form of import should be avoided - main.heroes.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Spawner.java:14:5: Class 'Spawner' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Spawner' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Spawner.java:23:5: Class 'Spawner' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Spawner' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Spawner.java:32:5: Class 'Spawner' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Spawner' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Spawner.java:41:5: Class 'Spawner' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Spawner' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Spawner.java:50:5: Class 'Spawner' looks like designed for extension (can be subclassed), but the method 'computeObservation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Spawner' final or making the method 'computeObservation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Spawner.java:51:36: Parameter hero should be final. [FinalParameters]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/factories/HeroFactory.java:4: Using the '.*' form of import should be avoided - main.heroes.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/factories/AngelFactory.java:3: Using the '.*' form of import should be avoided - main.angels.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/gameplay/GreatSorcerer.java:51:24: Parameter o should be final. [FinalParameters]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/gameplay/GreatSorcerer.java:51:38: Parameter arg should be final. [FinalParameters]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/gameplay/IOAssistant.java:4: Using the '.*' form of import should be avoided - main.data.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/gameplay/IOAssistant.java:153: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/gameplay/Game.java:65:12: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/gameplay/Game.java:65:36: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/gameplay/Game.java:95: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/gameplay/Game.java:96: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/data/GameObserver.java:11:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/data/InputData.java:20:12: More than 7 parameters (found 8). [ParameterNumber]
Audit done.
Checkstyle ends with 114 errors.
