Starting audit...
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Hero.java:3: Using the '.*' form of import should be avoided - main.data.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Hero.java:26:5: More than 7 parameters (found 8). [ParameterNumber]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Hero.java:74:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Hero.java:82:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getFullName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getFullName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/heroes/Hero.java:99:44: Name 'XPAmount' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Angel.java:5: Using the '.*' form of import should be avoided - main.heroes.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Angel.java:38:5: Class 'Angel' looks like designed for extension (can be subclassed), but the method 'getRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Angel' final or making the method 'getRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Angel.java:42:5: Class 'Angel' looks like designed for extension (can be subclassed), but the method 'getCol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Angel' final or making the method 'getCol' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Angel.java:46:5: Class 'Angel' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Angel' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Angel.java:50:5: Class 'Angel' looks like designed for extension (can be subclassed), but the method 'spawn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Angel' final or making the method 'spawn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/SmallAngel.java:4: Using the '.*' form of import should be avoided - main.heroes.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/SmallAngel.java:33:5: Class 'SmallAngel' looks like designed for extension (can be subclassed), but the method 'computeObservation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SmallAngel' final or making the method 'computeObservation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/SmallAngel.java:34:36: Parameter hero should be final. [FinalParameters]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/GoodBoy.java:4: Using the '.*' form of import should be avoided - main.heroes.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/GoodBoy.java:33:5: Class 'GoodBoy' looks like designed for extension (can be subclassed), but the method 'computeObservation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GoodBoy' final or making the method 'computeObservation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/GoodBoy.java:34:36: Parameter hero should be final. [FinalParameters]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/LifeGiver.java:4: Using the '.*' form of import should be avoided - main.heroes.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/LifeGiver.java:33:5: Class 'LifeGiver' looks like designed for extension (can be subclassed), but the method 'computeObservation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LifeGiver' final or making the method 'computeObservation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/LifeGiver.java:34:36: Parameter hero should be final. [FinalParameters]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/XPAngel.java:5: Using the '.*' form of import should be avoided - main.heroes.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/XPAngel.java:14:5: Class 'XPAngel' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'XPAngel' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/XPAngel.java:20:5: Class 'XPAngel' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'XPAngel' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/XPAngel.java:26:5: Class 'XPAngel' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'XPAngel' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/XPAngel.java:32:5: Class 'XPAngel' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'XPAngel' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/XPAngel.java:38:5: Class 'XPAngel' looks like designed for extension (can be subclassed), but the method 'computeObservation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'XPAngel' final or making the method 'computeObservation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/XPAngel.java:39:36: Parameter hero should be final. [FinalParameters]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/DamageAngel.java:4: Using the '.*' form of import should be avoided - main.heroes.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/DamageAngel.java:33:5: Class 'DamageAngel' looks like designed for extension (can be subclassed), but the method 'computeObservation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DamageAngel' final or making the method 'computeObservation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Dracula.java:4: Using the '.*' form of import should be avoided - main.heroes.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Dracula.java:33:5: Class 'Dracula' looks like designed for extension (can be subclassed), but the method 'computeObservation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Dracula' final or making the method 'computeObservation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Dracula.java:34:36: Parameter hero should be final. [FinalParameters]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/DarkAngel.java:4: Using the '.*' form of import should be avoided - main.heroes.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/DarkAngel.java:33:5: Class 'DarkAngel' looks like designed for extension (can be subclassed), but the method 'computeObservation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DarkAngel' final or making the method 'computeObservation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/DarkAngel.java:34:36: Parameter hero should be final. [FinalParameters]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/LevelUpAngel.java:4: Using the '.*' form of import should be avoided - main.heroes.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/LevelUpAngel.java:33:5: Class 'LevelUpAngel' looks like designed for extension (can be subclassed), but the method 'computeObservation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LevelUpAngel' final or making the method 'computeObservation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/LevelUpAngel.java:34:36: Parameter hero should be final. [FinalParameters]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/TheDoomer.java:4: Using the '.*' form of import should be avoided - main.heroes.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/TheDoomer.java:13:5: Class 'TheDoomer' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheDoomer' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/TheDoomer.java:19:5: Class 'TheDoomer' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheDoomer' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/TheDoomer.java:25:5: Class 'TheDoomer' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheDoomer' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/TheDoomer.java:31:5: Class 'TheDoomer' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheDoomer' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/TheDoomer.java:37:5: Class 'TheDoomer' looks like designed for extension (can be subclassed), but the method 'computeObservation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheDoomer' final or making the method 'computeObservation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/TheDoomer.java:38:36: Parameter hero should be final. [FinalParameters]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Spawner.java:5: Using the '.*' form of import should be avoided - main.heroes.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Spawner.java:14:5: Class 'Spawner' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Spawner' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Spawner.java:19:5: Class 'Spawner' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Spawner' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Spawner.java:24:5: Class 'Spawner' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Spawner' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Spawner.java:29:5: Class 'Spawner' looks like designed for extension (can be subclassed), but the method 'helpHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Spawner' final or making the method 'helpHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Spawner.java:34:5: Class 'Spawner' looks like designed for extension (can be subclassed), but the method 'computeObservation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Spawner' final or making the method 'computeObservation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/angels/Spawner.java:35:36: Parameter hero should be final. [FinalParameters]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/factories/HeroFactory.java:4: Using the '.*' form of import should be avoided - main.heroes.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/factories/AngelFactory.java:3: Using the '.*' form of import should be avoided - main.angels.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/gameplay/GreatSorcerer.java:51:24: Parameter o should be final. [FinalParameters]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/gameplay/GreatSorcerer.java:51:38: Parameter arg should be final. [FinalParameters]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/gameplay/IOAssistant.java:4: Using the '.*' form of import should be avoided - main.data.*. [AvoidStarImport]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/gameplay/IOAssistant.java:153: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/data/GameObserver.java:11:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /Users/grigorelucian/Documents/Repos/League-of-OOP/src/main/data/InputData.java:20:12: More than 7 parameters (found 8). [ParameterNumber]
Audit done.
Checkstyle ends with 59 errors.
